{
  "name": "have",
  "version": "0.2.3",
  "description": "Have your arguments, and validate it too. -- Slick arguments validator for all your js functions.",
  "main": "have.js",
  "scripts": {
    "test": "make test",
    "prepublish": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chakrit/have"
  },
  "keywords": [
    "function",
    "validation"
  ],
  "author": {
    "name": "Chakrit Wichian",
    "email": "service@chakrit.net",
    "url": "http://chakrit.net"
  },
  "license": "BSD",
  "devDependencies": {
    "mocha-istanbul": "~0.1.0",
    "supervisor": "~0.5.2",
    "chai": "~1.5.0",
    "mocha": "~1.8.1",
    "istanbul": "~0.1.31"
  },
  "readme": "\n[![Build Status](https://travis-ci.org/chakrit/have.png?branch=master)](https://travis-ci.org/chakrit/have)\n\n# HAVE.js\n\nHave your arguments, and validate it too:\n\n```js\nvar have = require('have');\n\nfunction safeFunc(id, options, callback) {\n  have(arguments,\n    { id       : 'string or number'\n    , options  : 'optional object'\n    , callback : 'function'\n    });\n}\n```\n\nHAVE.js gives you a mini-DSL to quickly validate your function arguments.\n\n# MINI-DSL\n\nIn order of precedence:\n\n* `opt X|optional X` - Optional X\n* `X or Y` - Either X or Y\n* `X a|X arr|x array` - Array of X\n* `s|str|string` - String\n* `n|num|number` - Number\n* `f|fun|func|function` - Function\n* `a|arr|array` - Array\n* `o|obj|object` - Object\n* `r|rx|regex|regexp` - RegExp\n* `d|date` - Date\n\nThese matchers can be combined. These are all valid HAVE.js matchers:\n\n* `str or num array` - String or Array of Number\n* `num arr or str arr` - Array of Number or Array of String\n* `num a a a a` - Array of Array of Array of Array of Number\n* `opt str or num array` - Optional (String or Array of Number)\n\nHave fun!\n\n# SOFT ASSERTS\n\nIf you are like me and you write a lot of method preconditions that should be turned off\nor atleast, should *not* throws in production, you can replace HAVE.js assert function\nlike so:\n\n```js\nvar have = require('have');\n\nhave.assert(function(cond, message) {\n  if (!cond) {\n    console.log('WARN: assertion failed: ' + message);\n  }\n});\n```\n\nThis will replace the `assert` function HAVE.js uses internally with your implementation\nso if you want to completely turns assertion off, then just give it a no-op function.\n\n# SHORTERs\n\nFor those who like it short, the above example can also be written like this:\n\n```js\nvar have = require('have');\n\nfunction safeFunc(id, options, callback) {\n  have(arguments, { id: 's or n', options: 'opt o', callback: 'f' });\n}\n```\n\nThis is not very readable, of course. But HAVE.js does not dictate your readability\npreference for you. So go wild if you think it is ok : )\n\n# LICENSE\n\nBSD (if you don't like BSD, just contact me)\n\n# CHANGELOG\n\n#### v0.2.1 - v0.2.2\n\n* Eat `null` and `undefined` where optional argument is expected.\n\n# SUPPORT / CONTRIBUTE\n\nTest with `npm test` or `make test`.\n\nJust open a [new GitHub issue](https://github.com/chakrit/have/issues/new) or ping me\n[@chakrit](https://twitter.com/chakrit) on Twitter.\n\nPull requests and feature suggestions totally welcome.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chakrit/have/issues"
  },
  "homepage": "https://github.com/chakrit/have",
  "_id": "have@0.2.3",
  "dist": {
    "shasum": "885809fc5755f75d120858fbc370b8301d419a55"
  },
  "_from": "have@0.2.3",
  "_resolved": "https://registry.npmjs.org/have/-/have-0.2.3.tgz"
}
