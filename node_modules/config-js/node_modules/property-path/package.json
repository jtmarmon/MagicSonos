{
  "name": "property-path",
  "version": "0.0.5",
  "description": "Get and set object properties by path where you can specify the separator.",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter list ./test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stdarg/property-path.git"
  },
  "keywords": [
    "object",
    "property",
    "obj",
    "properties",
    "path",
    "get",
    "set",
    "paths",
    "pathes",
    "string",
    "separator"
  ],
  "author": {
    "name": "Edmond Meinfelder"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/stdarg/property-path/issues"
  },
  "homepage": "https://github.com/stdarg/property-path",
  "dependencies": {
    "is2": "0.0.11",
    "lodash": "2.4.1"
  },
  "devDependencies": {
    "mocha": "1.17.0"
  },
  "readme": "property-path\n=============\n\nGet and set object properties by a string path, where you can specify the\nseparator.\n\n## Example\n\n    var propPath = require('property-path');\n\n    var testObj = {\n        a: 1,\n        b: true,\n        c: {\n            d: {\n                e: 'Hello',\n                f: [ 1, 2, false, 'hi' ]\n            }\n        }\n    };\n\n    console.log(propPath.get(testObj, 'a'));\n    console.log(propPath.get(testObj, 'b'));\n    console.log(propPath.get(testObj, 'c.d.e'));\n    console.log(propPath.get(testObj, 'c/d/e', '/'));\n\n    propPath.set(testObj, 'c.d.f.0', 333);\n    console.log(testObj.c.d.f[0]);\n\nThe above code results in the following output:\n\n    1\n    true\n    Hello\n    Hello\n    333\n\n## Installation\n\n    npm install property-path\n\n## API\n\n### get(obj, path, [sep])\n\nGiven an object and a char-separated path, return the value at the path\nor false if no such value can be found.\n\n#### Params: \n\n* **Object** *obj* An object upon which to apply the path.\n* **String** *path* The path to traverse the object, e.g &#39;a.b.c&#39;\n* **String** *[sep]* The separator char to delimit the properties in the path. Optional. If not specified, &#39;.&#39; is assumed.\n\n#### Return:\n\n* **Undefined|Any** returns the value, if found or undefined otherwise.\n\n### set(obj, path, value, [sep])\n\nGiven an object and a char-separated path, return the value at the path\nor false if no such value can be found.\n\n#### Params: \n\n* **Object** *obj* An object upon which to apply the path.\n* **String** *path* The path to traverse the object, e.g &#39;a.b.c&#39;\n* **Any** *value* The value to set the property to.\n* **String** *[sep]* The separator char to delimit the properties in the path. Optional. If not specified, &#39;.&#39; is assumed.\n\n#### Return:\n\n* **Undefined|Any** returns the value set, if the property is found or undefined otherwise.\n\n### remove(obj, path, [sep])\nDelete the property at path on obj.\n\n* **Object** *obj* An object upon which to apply the path.\n* **String** *path* The path to traverse the object, e.g &#39;a.b.c&#39;\n* **String** *[sep]* The separator char to delimit the properties in the path. Optional. If not specified, &#39;.&#39; is assumed.\n\n#### Return:\n\n* **Boolean** returns the value set, if the property is found or undefined otherwise.\n\n### setSepChar(chr)\nSet the default separator character. If not specified, '.' is used, however, you\nmay set the default to whatever you want.\n\n* **String** *[sep]* chr The default separator char to delimit the properties in the path.\n\n#### Return:\n\n* **Boolean** true if set and false otherwise.\n\n\n## License\nThe MIT License (MIT)\n\nCopyright (c) 2014 Edmond Meinfelder\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "_id": "property-path@0.0.5",
  "dist": {
    "shasum": "22a3c7a829c93fbbde9857dc3f6903b939454056"
  },
  "_from": "property-path@0.0.5",
  "_resolved": "https://registry.npmjs.org/property-path/-/property-path-0.0.5.tgz"
}
